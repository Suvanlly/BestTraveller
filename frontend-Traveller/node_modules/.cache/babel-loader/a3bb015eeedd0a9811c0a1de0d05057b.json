{"ast":null,"code":"var _jsxFileName = \"/Users/sophiesun/Desktop/Bestraveller/front-end-traveler/src/pages/ReviewPage/Reviews/Reviews.jsx\";\n\n/* eslint-disable react/prop-types */\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport accountIcon from \"../../UserPage/Profile/img/account.png\";\nimport bookingIcon from \"../../UserPage/Profile/img/booking.png\";\nimport paymentIcon from \"../../UserPage/Profile/img/payment.png\";\nimport reviewIcon from \"../../UserPage/Profile/img/review.png\";\nimport { Loading } from \"../../../components/Loading/Loading\";\nimport { Background, ProfileWrap, Left, ListWrap, List, Icon, Link, Right, ReviewCard, Title, Date, Comment, Img } from \"./styles/reviews\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Reviews extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myReviews: [],\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      userFirstName\n    } = this.props;\n    axios.get(`http://127.0.0.1:8000/api/v1/reviews/getMyReviews/${userFirstName}`).then(response => {\n      console.log(response);\n      this.setState({\n        myReviews: response.data.data.reviews,\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      myReviews,\n      isLoading\n    } = this.state;\n    if (isLoading) return /*#__PURE__*/_jsxDEV(Loading, {\n      children: \"Loading...\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83D\\uDCBB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 27\n    }, this);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Background, {\n        children: /*#__PURE__*/_jsxDEV(ProfileWrap, {\n          children: [/*#__PURE__*/_jsxDEV(Left, {\n            children: /*#__PURE__*/_jsxDEV(ListWrap, {\n              children: [/*#__PURE__*/_jsxDEV(List, {\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  src: accountIcon,\n                  alt: \"account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"/user\",\n                  children: \"Profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  src: bookingIcon,\n                  alt: \"booking\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"/user/bookings\",\n                  children: \"Bookings\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  src: paymentIcon,\n                  alt: \"payment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"https://dashboard.stripe.com/test/payments\",\n                  children: \"Payment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  src: reviewIcon,\n                  alt: \"review\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"/user/reviews\",\n                  style: {\n                    color: \"#3ab2b3\"\n                  },\n                  children: \"Reviews\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Right, {\n            children: myReviews.map(review => /*#__PURE__*/_jsxDEV(ReviewCard, {\n              children: [/*#__PURE__*/_jsxDEV(Img, {\n                src: `/img/tours/${review.tourImage}.jpg`,\n                alt: \"promotion image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Title, {\n                children: review.tourTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Date, {\n                children: moment(review.createdAt).format(\"DD.MM.YYYY\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Comment, {\n                children: review.comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userFirstName: state.header.userFirstName\n});\n\nexport default connect(mapStateToProps, null)(Reviews);","map":{"version":3,"sources":["/Users/sophiesun/Desktop/Bestraveller/front-end-traveler/src/pages/ReviewPage/Reviews/Reviews.jsx"],"names":["React","Component","axios","moment","connect","accountIcon","bookingIcon","paymentIcon","reviewIcon","Loading","Background","ProfileWrap","Left","ListWrap","List","Icon","Link","Right","ReviewCard","Title","Date","Comment","Img","Reviews","constructor","props","state","myReviews","isLoading","componentDidMount","userFirstName","get","then","response","console","log","setState","data","reviews","render","color","map","review","tourImage","tourTitle","createdAt","format","comment","mapStateToProps","header"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { Component } from \"react\"\nimport axios from \"axios\"\nimport moment from \"moment\"\nimport { connect } from \"react-redux\"\nimport accountIcon from \"../../UserPage/Profile/img/account.png\"\nimport bookingIcon from \"../../UserPage/Profile/img/booking.png\"\nimport paymentIcon from \"../../UserPage/Profile/img/payment.png\"\nimport reviewIcon from \"../../UserPage/Profile/img/review.png\"\nimport { Loading } from \"../../../components/Loading/Loading\"\n\nimport {\n  Background,\n  ProfileWrap,\n  Left,\n  ListWrap,\n  List,\n  Icon,\n  Link,\n  Right,\n  ReviewCard,\n  Title,\n  Date,\n  Comment,\n  Img,\n} from \"./styles/reviews\"\n\nclass Reviews extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      myReviews: [],\n      isLoading: true,\n    }\n  }\n\n  componentDidMount() {\n    const { userFirstName } = this.props\n    axios\n      .get(`http://127.0.0.1:8000/api/v1/reviews/getMyReviews/${userFirstName}`)\n      .then((response) => {\n        console.log(response)\n        this.setState({\n          myReviews: response.data.data.reviews,\n          isLoading: false,\n        })\n      })\n  }\n\n  render() {\n    const { myReviews, isLoading } = this.state\n    if (isLoading) return <Loading>Loading...👩🏻‍💻</Loading>\n    return (\n      <>\n        <Background>\n          <ProfileWrap>\n            <Left>\n              <ListWrap>\n                <List>\n                  <Icon src={accountIcon} alt=\"account\" />\n                  <Link href=\"/user\">Profile</Link>\n                </List>\n                <List>\n                  <Icon src={bookingIcon} alt=\"booking\" />\n                  <Link href=\"/user/bookings\">Bookings</Link>\n                </List>\n                <List>\n                  <Icon src={paymentIcon} alt=\"payment\" />\n                  <Link href=\"https://dashboard.stripe.com/test/payments\">\n                    Payment\n                  </Link>\n                </List>\n                <List>\n                  <Icon src={reviewIcon} alt=\"review\" />\n                  <Link href=\"/user/reviews\" style={{ color: \"#3ab2b3\" }}>\n                    Reviews\n                  </Link>\n                </List>\n              </ListWrap>\n            </Left>\n            <Right>\n              {myReviews.map((review) => (\n                <ReviewCard>\n                  <Img\n                    src={`/img/tours/${review.tourImage}.jpg`}\n                    alt=\"promotion image\"\n                  />\n                  <Title>{review.tourTitle}</Title>\n                  <Date>{moment(review.createdAt).format(\"DD.MM.YYYY\")}</Date>\n                  <Comment>{review.comment}</Comment>\n                </ReviewCard>\n              ))}\n            </Right>\n          </ProfileWrap>\n        </Background>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  userFirstName: state.header.userFirstName,\n})\n\nexport default connect(mapStateToProps, null)(Reviews)\n"]},"metadata":{},"sourceType":"module"}