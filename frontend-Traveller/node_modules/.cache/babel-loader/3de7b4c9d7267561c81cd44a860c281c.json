{"ast":null,"code":"var _jsxFileName = \"/Users/sophiesun/Desktop/BestTraveller/frontend-Traveller/src/pages/Detail/Comment/CommentInput.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"../store/actionCreators\";\nimport { CommentWrap, CommentField, FieldName, FieldInput, InputArea, Button } from \"./styles/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CommentInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: \"\"\n    };\n    this.handleContentChange = this.handleContentChange.bind(this);\n  }\n\n  handleContentChange(event) {\n    this.setState({\n      content: event.target.value\n    });\n  }\n\n  render() {\n    const {\n      content\n    } = this.state;\n    const {\n      userEmail,\n      userImage,\n      userFirstName,\n      tour,\n      slug,\n      sendComment\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(CommentWrap, {\n      children: [/*#__PURE__*/_jsxDEV(CommentField, {\n        children: [/*#__PURE__*/_jsxDEV(FieldName, {\n          children: \"Leave your comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FieldInput, {\n          children: /*#__PURE__*/_jsxDEV(InputArea, {\n            value: content,\n            onChange: this.handleContentChange,\n            placeholder: \"Your comment is valuable for us to improve our service!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => sendComment(userEmail, userImage, userFirstName, content, tour, slug),\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCommentInput.propTypes = {\n  userEmail: PropTypes.string.isRequired,\n  userFirstName: PropTypes.string.isRequired,\n  userImage: PropTypes.string.isRequired,\n  tour: PropTypes.shape({}).isRequired,\n  slug: PropTypes.string.isRequired,\n  sendComment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isLoggedIn: state.header.isLoggedIn,\n  userEmail: state.header.userEmail,\n  userFirstName: state.header.userFirstName,\n  userImage: state.header.userImage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  sendComment(userEmail, userImage, userFirstName, content, tour, slug) {\n    dispatch(actionCreators.sendComment(userEmail, userImage, userFirstName, content, tour, slug));\n  }\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentInput);","map":{"version":3,"sources":["/Users/sophiesun/Desktop/BestTraveller/frontend-Traveller/src/pages/Detail/Comment/CommentInput.jsx"],"names":["React","Component","PropTypes","connect","actionCreators","CommentWrap","CommentField","FieldName","FieldInput","InputArea","Button","CommentInput","constructor","props","state","content","handleContentChange","bind","event","setState","target","value","render","userEmail","userImage","userFirstName","tour","slug","sendComment","propTypes","string","isRequired","shape","func","mapStateToProps","isLoggedIn","header","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport * as actionCreators from \"../store/actionCreators\"\nimport {\n  CommentWrap,\n  CommentField,\n  FieldName,\n  FieldInput,\n  InputArea,\n  Button,\n} from \"./styles/styles\"\n\nclass CommentInput extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      content: \"\",\n    }\n\n    this.handleContentChange = this.handleContentChange.bind(this)\n  }\n\n  handleContentChange(event) {\n    this.setState({\n      content: event.target.value,\n    })\n  }\n\n  render() {\n    const { content } = this.state\n    const { userEmail, userImage, userFirstName, tour, slug, sendComment } =\n      this.props\n    return (\n      <CommentWrap>\n        <CommentField>\n          <FieldName>Leave your comment</FieldName>\n          <FieldInput>\n            <InputArea\n              value={content}\n              onChange={this.handleContentChange}\n              placeholder=\"Your comment is valuable for us to improve our service!\"\n            />\n          </FieldInput>\n        </CommentField>\n        <Button\n          onClick={() =>\n            sendComment(\n              userEmail,\n              userImage,\n              userFirstName,\n              content,\n              tour,\n              slug\n            )\n          }\n        >\n          Post\n        </Button>\n      </CommentWrap>\n    )\n  }\n}\n\nCommentInput.propTypes = {\n  userEmail: PropTypes.string.isRequired,\n  userFirstName: PropTypes.string.isRequired,\n  userImage: PropTypes.string.isRequired,\n  tour: PropTypes.shape({}).isRequired,\n  slug: PropTypes.string.isRequired,\n  sendComment: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  isLoggedIn: state.header.isLoggedIn,\n  userEmail: state.header.userEmail,\n  userFirstName: state.header.userFirstName,\n  userImage: state.header.userImage,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  sendComment(userEmail, userImage, userFirstName, content, tour, slug) {\n    dispatch(\n      actionCreators.sendComment(\n        userEmail,\n        userImage,\n        userFirstName,\n        content,\n        tour,\n        slug\n      )\n    )\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentInput)\n"]},"metadata":{},"sourceType":"module"}