{"ast":null,"code":"import axios from \"axios\";\nimport swal from \"sweetalert\";\nimport configuration from \"../../../config/config\";\nimport * as actionTypes from \"./actionTypes\";\n\nconst userLogin = (userEmail, userFirstName, userLastName, userPassword, userImage) => ({\n  type: actionTypes.USER_LOGIN,\n  userEmail,\n  userFirstName,\n  userLastName,\n  userPassword,\n  userImage\n});\n\nconst userLogout = () => ({\n  type: actionTypes.USER_LOGOUT\n});\n\nconst updateUserInfo = (userFirstName, userLastName, userEmail, userImage, isLoggedIn) => ({\n  type: actionTypes.UPDATE_USER_INFO,\n  userFirstName,\n  userLastName,\n  userEmail,\n  userImage,\n  isLoggedIn\n});\n\nconst updateUserPassword = (currentPassword, newPassword, confirmedPassword, userEmail) => ({\n  type: actionTypes.UPDATE_USER_PASS,\n  currentPassword,\n  newPassword,\n  confirmedPassword,\n  userEmail\n});\n\nexport const login = values => dispatch => {\n  axios({\n    method: \"POST\",\n    url: `${configuration.api.backend_api}/api/v1/auth/login`,\n    data: {\n      email: values.email,\n      password: values.password\n    },\n    withCredentials: true\n  }).then(res => {\n    const userEmail = res.data.user.email;\n    const userPassword = res.data.user.password;\n    const userFirstName = res.data.user.firstName;\n    const userLastName = res.data.user.lastName;\n    const userImage = res.data.user.image;\n    const action = userLogin(userEmail, userFirstName, userLastName, userPassword, userImage);\n    dispatch(action);\n    swal(\"Welcome!\", \"You have successfully logged in!\", \"success\");\n  }).catch(err => {\n    swal(\"Oops!\", \"Wrong password\", \"error\");\n  });\n};\nexport const logout = () => dispatch => {\n  const action = userLogout();\n  dispatch(action);\n  swal(\"Goodbye!\", \"Successfully logged out\", \"success\");\n};\nexport const updateUser = (e, userFirstName, userLastName, userEmail, userImage, isLoggedIn) => {\n  e.preventDefault();\n  return dispatch => {\n    axios({\n      method: \"PATCH\",\n      url: `${configuration.api.backend_api}/api/v1/users/updateMe`,\n      data: {\n        firstName: userFirstName,\n        lastName: userLastName,\n        email: userEmail,\n        image: userImage\n      },\n      withCredentials: true\n    }).then(res => {\n      const action = updateUserInfo(userFirstName, userLastName, userEmail, userImage, isLoggedIn);\n      dispatch(action);\n      swal(\"Updated!\", \"You have successfully updated profile!\", \"success\");\n    }).catch(err => {\n      swal(\"Oops!\", \"Something went wrong!\", \"error\");\n    });\n  };\n};\nexport const updatePassword = (e, currentPassword, newPassword, confirmedPassword, userEmail) => {\n  e.preventDefault();\n  return dispatch => {\n    if (currentPassword === \"\") {\n      swal(\"Oops\", \"You have to enter the current password\", \"error\");\n      return;\n    }\n\n    if (newPassword === \"\") {\n      swal(\"Oops\", \"New password cannot be empty\", \"error\");\n      return;\n    }\n\n    if (newPassword === currentPassword) {\n      swal(\"Oops!\", \"Your new password cannot be the same as current password\", \"error\");\n      return;\n    }\n\n    if (newPassword !== confirmedPassword) {\n      swal(\"Oops!\", \"Confirm new password must be the same of new password\", \"error\");\n      return;\n    }\n\n    axios({\n      method: \"PATCH\",\n      url: `${configuration.api.backend_api}/api/v1/auth/updatePassword`,\n      data: {\n        currentPassword: currentPassword,\n        newPassword: newPassword,\n        confirmedPassword: confirmedPassword,\n        email: userEmail\n      },\n      withCredentials: true\n    }).then(res => {\n      swal(\"Updated!\", \"You have successfully updated password!\", \"success\");\n      const action = updateUserPassword(currentPassword, newPassword, confirmedPassword, userEmail);\n      dispatch(action);\n    }).catch(err => {\n      swal(\"Oops!\", \"Current password is not correct\", \"error\");\n    });\n  };\n};","map":{"version":3,"sources":["/Users/sophiesun/Desktop/BestTraveller/frontend-Traveller/src/components/Header/store/actionCreators.js"],"names":["axios","swal","configuration","actionTypes","userLogin","userEmail","userFirstName","userLastName","userPassword","userImage","type","USER_LOGIN","userLogout","USER_LOGOUT","updateUserInfo","isLoggedIn","UPDATE_USER_INFO","updateUserPassword","currentPassword","newPassword","confirmedPassword","UPDATE_USER_PASS","login","values","dispatch","method","url","api","backend_api","data","email","password","withCredentials","then","res","user","firstName","lastName","image","action","catch","err","logout","updateUser","e","preventDefault","updatePassword"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport swal from \"sweetalert\"\nimport configuration from \"../../../config/config\"\nimport * as actionTypes from \"./actionTypes\"\n\nconst userLogin = (\n  userEmail,\n  userFirstName,\n  userLastName,\n  userPassword,\n  userImage\n) => ({\n  type: actionTypes.USER_LOGIN,\n  userEmail,\n  userFirstName,\n  userLastName,\n  userPassword,\n  userImage,\n})\n\nconst userLogout = () => ({\n  type: actionTypes.USER_LOGOUT,\n})\n\nconst updateUserInfo = (\n  userFirstName,\n  userLastName,\n  userEmail,\n  userImage,\n  isLoggedIn\n) => ({\n  type: actionTypes.UPDATE_USER_INFO,\n  userFirstName,\n  userLastName,\n  userEmail,\n  userImage,\n  isLoggedIn,\n})\n\nconst updateUserPassword = (\n  currentPassword,\n  newPassword,\n  confirmedPassword,\n  userEmail\n) => ({\n  type: actionTypes.UPDATE_USER_PASS,\n  currentPassword,\n  newPassword,\n  confirmedPassword,\n  userEmail,\n})\n\nexport const login = (values) => (dispatch) => {\n  axios({\n    method: \"POST\",\n    url: `${configuration.api.backend_api}/api/v1/auth/login`,\n    data: {\n      email: values.email,\n      password: values.password,\n    },\n    withCredentials: true,\n  })\n    .then((res) => {\n      const userEmail = res.data.user.email\n      const userPassword = res.data.user.password\n      const userFirstName = res.data.user.firstName\n      const userLastName = res.data.user.lastName\n      const userImage = res.data.user.image\n      const action = userLogin(\n        userEmail,\n        userFirstName,\n        userLastName,\n        userPassword,\n        userImage\n      )\n      dispatch(action)\n      swal(\"Welcome!\", \"You have successfully logged in!\", \"success\")\n    })\n    .catch((err) => {\n      swal(\"Oops!\", \"Wrong password\", \"error\")\n    })\n}\n\nexport const logout = () => (dispatch) => {\n  const action = userLogout()\n  dispatch(action)\n  swal(\"Goodbye!\", \"Successfully logged out\", \"success\")\n}\n\nexport const updateUser = (\n  e,\n  userFirstName,\n  userLastName,\n  userEmail,\n  userImage,\n  isLoggedIn\n) => {\n  e.preventDefault()\n  return (dispatch) => {\n    axios({\n      method: \"PATCH\",\n      url: `${configuration.api.backend_api}/api/v1/users/updateMe`,\n      data: {\n        firstName: userFirstName,\n        lastName: userLastName,\n        email: userEmail,\n        image: userImage,\n      },\n      withCredentials: true,\n    })\n      .then((res) => {\n        const action = updateUserInfo(\n          userFirstName,\n          userLastName,\n          userEmail,\n          userImage,\n          isLoggedIn\n        )\n        dispatch(action)\n        swal(\"Updated!\", \"You have successfully updated profile!\", \"success\")\n      })\n      .catch((err) => {\n        swal(\"Oops!\", \"Something went wrong!\", \"error\")\n      })\n  }\n}\n\nexport const updatePassword = (\n  e,\n  currentPassword,\n  newPassword,\n  confirmedPassword,\n  userEmail\n) => {\n  e.preventDefault()\n  return (dispatch) => {\n    if (currentPassword === \"\") {\n      swal(\"Oops\", \"You have to enter the current password\", \"error\")\n      return\n    }\n    if (newPassword === \"\") {\n      swal(\"Oops\", \"New password cannot be empty\", \"error\")\n      return\n    }\n    if (newPassword === currentPassword) {\n      swal(\n        \"Oops!\",\n        \"Your new password cannot be the same as current password\",\n        \"error\"\n      )\n      return\n    }\n    if (newPassword !== confirmedPassword) {\n      swal(\n        \"Oops!\",\n        \"Confirm new password must be the same of new password\",\n        \"error\"\n      )\n      return\n    }\n    axios({\n      method: \"PATCH\",\n      url: `${configuration.api.backend_api}/api/v1/auth/updatePassword`,\n      data: {\n        currentPassword: currentPassword,\n        newPassword: newPassword,\n        confirmedPassword: confirmedPassword,\n        email: userEmail,\n      },\n      withCredentials: true,\n    })\n      .then((res) => {\n        swal(\"Updated!\", \"You have successfully updated password!\", \"success\")\n        const action = updateUserPassword(\n          currentPassword,\n          newPassword,\n          confirmedPassword,\n          userEmail\n        )\n        dispatch(action)\n      })\n      .catch((err) => {\n        swal(\"Oops!\", \"Current password is not correct\", \"error\")\n      })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}