{"ast":null,"code":"/* eslint-disable camelcase */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable no-alert */\n\n/* eslint-disable no-undef */\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport * as actionTypes from \"./actionTypes\";\n\nconst userLogin = (userEmail, userFirstName, userLastName, userPassword, userImage) => ({\n  type: actionTypes.USER_LOGIN,\n  userEmail,\n  userFirstName,\n  userLastName,\n  userPassword,\n  userImage\n});\n\nconst userLogout = () => ({\n  type: actionTypes.USER_LOGOUT\n});\n\nconst update_user_info = (userFirstName, userLastName, userEmail, userImage, isLoggedIn) => ({\n  type: actionTypes.UPDATE_USER_INFO,\n  userFirstName,\n  userLastName,\n  userEmail,\n  userImage,\n  isLoggedIn\n});\n\nconst update_user_pass = (currentPassword, newPassword, confirmedPassword, userEmail) => ({\n  type: actionTypes.UPDATE_USER_PASS,\n  currentPassword,\n  newPassword,\n  confirmedPassword,\n  userEmail\n});\n\nexport const login = values => dispatch => {\n  axios({\n    method: \"POST\",\n    url: \"http://127.0.0.1:8000/api/v1/auth/login\",\n    data: {\n      email: values.email,\n      password: values.password\n    },\n    withCredentials: true\n  }).then(res => {\n    console.log(res.data.user);\n    const userEmail = res.data.user.email;\n    const userPassword = res.data.user.password;\n    const userFirstName = res.data.user.firstName;\n    const userLastName = res.data.user.lastName;\n    const userImage = res.data.user.image;\n    const action = userLogin(userEmail, userFirstName, userLastName, userPassword, userImage);\n    dispatch(action);\n    swal(\"Welcome!\", \"You have successfully logged in!\", \"success\");\n    window.location = \"/\";\n  }).catch(err => {\n    swal(\"Oops!\", \"Something went wrong!\", \"error\");\n    console.log(err);\n  });\n};\nexport const logout = () => dispatch => {\n  const action = userLogout();\n  dispatch(action);\n  alert(\"Goodbye!\", \"Successfully logged out\", \"success\");\n};\nexport const updateUser = (e, userFirstName, userLastName, userEmail, userImage, isLoggedIn) => {\n  e.preventDefault();\n  return dispatch => {\n    axios({\n      method: \"PATCH\",\n      url: \"http://127.0.0.1:8000/api/v1/users/updateMe\",\n      data: {\n        firstName: userFirstName,\n        lastName: userLastName,\n        email: userEmail,\n        image: userImage\n      },\n      withCredentials: true\n    }).then(res => {\n      console.log(res);\n      const action = update_user_info(userFirstName, userLastName, userEmail, userImage, isLoggedIn);\n      dispatch(action);\n      alert(\"Successfully updated\");\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const updatePassword = (e, currentPassword, newPassword, confirmedPassword, userEmail) => {\n  e.preventDefault();\n  return dispatch => {\n    axios({\n      method: \"PATCH\",\n      url: \"http://127.0.0.1:3000/api/v1/auth/updatePassword\",\n      data: {\n        currentPassword: currentPassword,\n        newPassword: newPassword,\n        confirmedPassword: confirmedPassword,\n        email: userEmail\n      },\n      withCredentials: true\n    }).then(res => {\n      alert(\"Password successfully updated\");\n      const action = update_user_pass(currentPassword, newPassword, confirmedPassword, userEmail);\n      dispatch(action);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/sophiesun/Desktop/Bestraveller/front-end-traveler/src/components/Header/store/actionCreators.js"],"names":["axios","swal","actionTypes","userLogin","userEmail","userFirstName","userLastName","userPassword","userImage","type","USER_LOGIN","userLogout","USER_LOGOUT","update_user_info","isLoggedIn","UPDATE_USER_INFO","update_user_pass","currentPassword","newPassword","confirmedPassword","UPDATE_USER_PASS","login","values","dispatch","method","url","data","email","password","withCredentials","then","res","console","log","user","firstName","lastName","image","action","window","location","catch","err","logout","alert","updateUser","e","preventDefault","updatePassword"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-alert */\n/* eslint-disable no-undef */\nimport axios from \"axios\"\nimport swal from \"sweetalert\"\nimport * as actionTypes from \"./actionTypes\"\n\nconst userLogin = (\n  userEmail,\n  userFirstName,\n  userLastName,\n  userPassword,\n  userImage\n) => ({\n  type: actionTypes.USER_LOGIN,\n  userEmail,\n  userFirstName,\n  userLastName,\n  userPassword,\n  userImage,\n})\n\nconst userLogout = () => ({\n  type: actionTypes.USER_LOGOUT,\n})\n\nconst update_user_info = (\n  userFirstName,\n  userLastName,\n  userEmail,\n  userImage,\n  isLoggedIn\n) => ({\n  type: actionTypes.UPDATE_USER_INFO,\n  userFirstName,\n  userLastName,\n  userEmail,\n  userImage,\n  isLoggedIn,\n})\n\nconst update_user_pass = (\n  currentPassword,\n  newPassword,\n  confirmedPassword,\n  userEmail\n) => ({\n  type: actionTypes.UPDATE_USER_PASS,\n  currentPassword,\n  newPassword,\n  confirmedPassword,\n  userEmail,\n})\n\nexport const login = (values) => (dispatch) => {\n  axios({\n    method: \"POST\",\n    url: \"http://127.0.0.1:8000/api/v1/auth/login\",\n    data: {\n      email: values.email,\n      password: values.password,\n    },\n    withCredentials: true,\n  })\n    .then((res) => {\n      console.log(res.data.user)\n      const userEmail = res.data.user.email\n      const userPassword = res.data.user.password\n      const userFirstName = res.data.user.firstName\n      const userLastName = res.data.user.lastName\n      const userImage = res.data.user.image\n      const action = userLogin(\n        userEmail,\n        userFirstName,\n        userLastName,\n        userPassword,\n        userImage\n      )\n      dispatch(action)\n      swal(\"Welcome!\", \"You have successfully logged in!\", \"success\")\n      window.location = \"/\"\n    })\n    .catch((err) => {\n      swal(\"Oops!\", \"Something went wrong!\", \"error\")\n      console.log(err)\n    })\n}\n\nexport const logout = () => (dispatch) => {\n  const action = userLogout()\n  dispatch(action)\n  alert(\"Goodbye!\", \"Successfully logged out\", \"success\")\n}\n\nexport const updateUser = (\n  e,\n  userFirstName,\n  userLastName,\n  userEmail,\n  userImage,\n  isLoggedIn\n) => {\n  e.preventDefault()\n  return (dispatch) => {\n    axios({\n      method: \"PATCH\",\n      url: \"http://127.0.0.1:8000/api/v1/users/updateMe\",\n      data: {\n        firstName: userFirstName,\n        lastName: userLastName,\n        email: userEmail,\n        image: userImage,\n      },\n      withCredentials: true,\n    })\n      .then((res) => {\n        console.log(res)\n        const action = update_user_info(\n          userFirstName,\n          userLastName,\n          userEmail,\n          userImage,\n          isLoggedIn\n        )\n        dispatch(action)\n        alert(\"Successfully updated\")\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n}\n\nexport const updatePassword = (\n  e,\n  currentPassword,\n  newPassword,\n  confirmedPassword,\n  userEmail\n) => {\n  e.preventDefault()\n  return (dispatch) => {\n    axios({\n      method: \"PATCH\",\n      url: \"http://127.0.0.1:3000/api/v1/auth/updatePassword\",\n      data: {\n        currentPassword: currentPassword,\n        newPassword: newPassword,\n        confirmedPassword: confirmedPassword,\n        email: userEmail,\n      },\n      withCredentials: true,\n    })\n      .then((res) => {\n        alert(\"Password successfully updated\")\n        const action = update_user_pass(\n          currentPassword,\n          newPassword,\n          confirmedPassword,\n          userEmail\n        )\n        dispatch(action)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}