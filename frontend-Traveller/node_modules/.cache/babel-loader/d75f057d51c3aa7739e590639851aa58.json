{"ast":null,"code":"var _jsxFileName = \"/Users/sophiesun/Desktop/Bestraveller/front-end-traveler/src/pages/PackagePage/CardContainer/CardContainer.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport DatePicker from \"react-datepicker\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { Loading } from \"../../../components/Loading/Loading\";\nimport PromCard from \"../../HomePage/Top/components/PromCard\";\nimport { Wrap } from \"./styles/cardContainer\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { SearchWrapper, DestinationWrapper, StateWrapper, DateWrapper, SliderWrapper, Title, Input, Icon } from \"./styles/search\";\nimport \"./styles/search.css\";\nimport SearchIcon from \"./img/search.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tours: [],\n      city: \"\",\n      state: \"\",\n      startDate: new Date(),\n      price: 0,\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://127.0.0.1:8000/api/v1/tours`).then(result => {\n      this.setState({\n        tours: result.data,\n        isLoading: false\n      });\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  }\n\n  handleStateChange(state) {\n    const {\n      value\n    } = state;\n    this.setState({\n      state: value\n    });\n  }\n\n  handleDateChange(date) {\n    this.setState({\n      startDate: date\n    });\n  }\n\n  handlePriceChange(e, price) {\n    this.setState({\n      price: price\n    });\n  }\n\n  getSearchedTour(city, state, startDate, price) {\n    const dateConvert = startDate.toLocaleDateString();\n    axios.get(`http://localhost:8000/api/v1/tours?$city=${city}&state=${state}&startDate=${dateConvert}&price=${price}`).then(response => {\n      const searchedTour = response.data;\n      this.setState({\n        tours: searchedTour\n      });\n    });\n  }\n\n  valueLabelFormat(value) {\n    return `$${value}`;\n  }\n\n  capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  render() {\n    const states = [{\n      value: \"VIC\",\n      label: \"Victoria\"\n    }, {\n      value: \"TAS\",\n      label: \"Tasmania\"\n    }, {\n      value: \"QLD\",\n      label: \"Queensland\"\n    }, {\n      value: \"WA\",\n      label: \"West Australia\"\n    }, {\n      value: \"SA\",\n      label: \"South Australia\"\n    }, {\n      value: \"NSW\",\n      label: \"New South Wales\"\n    }, {\n      value: \"NT\",\n      label: \"Northern Territory\"\n    }, {\n      value: \"ACT\",\n      label: \"Australian Capital Territory\"\n    }];\n    const {\n      isLoading,\n      tours,\n      city,\n      state,\n      startDate,\n      price\n    } = this.state;\n    if (isLoading) return /*#__PURE__*/_jsxDEV(Loading, {\n      children: \"Loading...\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83D\\uDCBB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 27\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Wrap, {\n      children: [/*#__PURE__*/_jsxDEV(SearchWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(DestinationWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            children: \"Select your destination city\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"city\",\n            placeholder: \"Sydney\",\n            onChange: e => this.handleChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StateWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            children: \"Select your state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            className: \"select\",\n            placeholder: \"Victoria\",\n            options: states // eslint-disable-next-line no-shadow\n            ,\n            onChange: state => this.handleStateChange(state)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DateWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            children: \"Select start date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: startDate,\n            dateFormat: \"dd/MM/yyyy\",\n            onChange: day => this.handleDateChange(day)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SliderWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            children: \"Select price range\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slider\",\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              getAriaValueText: this.valueLabelFormat,\n              valueLabelFormat: this.valueLabelFormat // eslint-disable-next-line no-shadow\n              ,\n              onChange: (e, price) => this.handlePriceChange(e, price),\n              max: 1000,\n              min: 0,\n              valueLabelDisplay: \"auto\",\n              \"aria-labelledby\": \"non-linear-slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Icon, {\n            src: SearchIcon,\n            onClick: () => this.getSearchedTour(city, state, startDate, price)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), tours.length > 0 ? tours.map((data, i) => /*#__PURE__*/_jsxDEV(PromCard, {\n        id: i,\n        source: data.image,\n        title: data.title,\n        price: data.price,\n        city: this.capitalize(data.city),\n        days: data.itinerary.length,\n        introduction: data.introduction,\n        slug: data.slug\n      }, data._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(PromCard, {\n        source: \"notFound\",\n        noLink: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CardContainer;","map":{"version":3,"sources":["/Users/sophiesun/Desktop/Bestraveller/front-end-traveler/src/pages/PackagePage/CardContainer/CardContainer.jsx"],"names":["React","Component","axios","Select","DatePicker","Slider","Loading","PromCard","Wrap","SearchWrapper","DestinationWrapper","StateWrapper","DateWrapper","SliderWrapper","Title","Input","Icon","SearchIcon","CardContainer","constructor","props","state","tours","city","startDate","Date","price","isLoading","componentDidMount","get","then","result","setState","data","handleChange","e","target","id","value","handleStateChange","handleDateChange","date","handlePriceChange","getSearchedTour","dateConvert","toLocaleDateString","response","searchedTour","valueLabelFormat","capitalize","string","charAt","toUpperCase","slice","render","states","label","day","length","map","i","image","title","itinerary","introduction","slug","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport axios from \"axios\"\nimport Select from \"react-select\"\nimport DatePicker from \"react-datepicker\"\nimport Slider from \"@material-ui/core/Slider\"\nimport { Loading } from \"../../../components/Loading/Loading\"\nimport PromCard from \"../../HomePage/Top/components/PromCard\"\nimport { Wrap } from \"./styles/cardContainer\"\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport {\n  SearchWrapper,\n  DestinationWrapper,\n  StateWrapper,\n  DateWrapper,\n  SliderWrapper,\n  Title,\n  Input,\n  Icon,\n} from \"./styles/search\"\nimport \"./styles/search.css\"\nimport SearchIcon from \"./img/search.png\"\n\nclass CardContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      tours: [],\n      city: \"\",\n      state: \"\",\n      startDate: new Date(),\n      price: 0,\n      isLoading: true,\n    }\n  }\n\n  componentDidMount() {\n    axios.get(`http://127.0.0.1:8000/api/v1/tours`).then((result) => {\n      this.setState({\n        tours: result.data,\n        isLoading: false,\n      })\n    })\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.id]: e.target.value,\n    })\n  }\n\n  handleStateChange(state) {\n    const { value } = state\n    this.setState({\n      state: value,\n    })\n  }\n\n  handleDateChange(date) {\n    this.setState({\n      startDate: date,\n    })\n  }\n\n  handlePriceChange(e, price) {\n    this.setState({\n      price: price,\n    })\n  }\n\n  getSearchedTour(city, state, startDate, price) {\n    const dateConvert = startDate.toLocaleDateString()\n    axios\n      .get(\n        `http://localhost:8000/api/v1/tours?$city=${city}&state=${state}&startDate=${dateConvert}&price=${price}`\n      )\n      .then((response) => {\n        const searchedTour = response.data\n        this.setState({\n          tours: searchedTour,\n        })\n      })\n  }\n\n  valueLabelFormat(value) {\n    return `$${value}`\n  }\n\n  capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1)\n  }\n\n  render() {\n    const states = [\n      { value: \"VIC\", label: \"Victoria\" },\n      { value: \"TAS\", label: \"Tasmania\" },\n      { value: \"QLD\", label: \"Queensland\" },\n      { value: \"WA\", label: \"West Australia\" },\n      { value: \"SA\", label: \"South Australia\" },\n      { value: \"NSW\", label: \"New South Wales\" },\n      { value: \"NT\", label: \"Northern Territory\" },\n      { value: \"ACT\", label: \"Australian Capital Territory\" },\n    ]\n    const { isLoading, tours, city, state, startDate, price } = this.state\n    if (isLoading) return <Loading>Loading...👩🏻‍💻</Loading>\n    return (\n      <Wrap>\n        <SearchWrapper>\n          <DestinationWrapper>\n            <Title>Select your destination city</Title>\n            <Input\n              id=\"city\"\n              placeholder=\"Sydney\"\n              onChange={(e) => this.handleChange(e)}\n            />\n          </DestinationWrapper>\n          <StateWrapper>\n            <Title>Select your state</Title>\n            <Select\n              className=\"select\"\n              placeholder=\"Victoria\"\n              options={states}\n              // eslint-disable-next-line no-shadow\n              onChange={(state) => this.handleStateChange(state)}\n            />\n          </StateWrapper>\n          <DateWrapper>\n            <Title>Select start date</Title>\n            <DatePicker\n              selected={startDate}\n              dateFormat=\"dd/MM/yyyy\"\n              onChange={(day) => this.handleDateChange(day)}\n            />\n          </DateWrapper>\n          <SliderWrapper>\n            <Title>Select price range</Title>\n            <div className=\"slider\">\n              <Slider\n                getAriaValueText={this.valueLabelFormat}\n                valueLabelFormat={this.valueLabelFormat}\n                // eslint-disable-next-line no-shadow\n                onChange={(e, price) => this.handlePriceChange(e, price)}\n                max={1000}\n                min={0}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"non-linear-slider\"\n              />\n            </div>\n            <Icon\n              src={SearchIcon}\n              onClick={() =>\n                this.getSearchedTour(city, state, startDate, price)\n              }\n            />\n          </SliderWrapper>\n        </SearchWrapper>\n        {tours.length > 0 ? (\n          tours.map((data, i) => (\n            <PromCard\n              id={i}\n              key={data._id}\n              source={data.image}\n              title={data.title}\n              price={data.price}\n              city={this.capitalize(data.city)}\n              days={data.itinerary.length}\n              introduction={data.introduction}\n              slug={data.slug}\n            />\n          ))\n        ) : (\n          <PromCard source=\"notFound\" noLink />\n        )}\n      </Wrap>\n    )\n  }\n}\n\nexport default CardContainer\n"]},"metadata":{},"sourceType":"module"}