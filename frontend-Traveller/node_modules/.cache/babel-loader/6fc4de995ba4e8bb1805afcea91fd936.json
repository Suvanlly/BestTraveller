{"ast":null,"code":"import swal from \"sweetalert\";\nimport axios from \"axios\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport configuration from \"../config/config\";\nconst stripePromise = loadStripe(\"pk_test_51JH5JMKu7kyZrQEG6Lo8u0p4bMPRIYLR2nwyj3JmeUFMKUjZU0Hax085w4Z4VfX0uFfKI4UQthFV2NPDr842JTrL00XBO0dRBQ\");\n\nconst validateEmail = email => {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\n\nexport const register = inputData => axios({\n  method: \"POST\",\n  url: `${configuration.api.backend_api}/api/v1/users`,\n  data: {\n    firstName: inputData.firstName.value,\n    lastName: inputData.lastName.value,\n    email: inputData.email.value,\n    password: inputData.password.value,\n    role: \"user\",\n    dateOfBirth: \"29/09/1999\"\n  }\n});\nexport const subscribe = (e, email) => {\n  e.preventDefault();\n\n  if (!validateEmail(email)) {\n    swal(\"Oops\", \"Please enter valid email address\", \"error\");\n    return;\n  }\n\n  axios({\n    method: \"POST\",\n    url: `${configuration.api.backend_api}/api/v1/auth/subscribe`,\n    data: {\n      email\n    },\n    withCredentials: true\n  }).then(res => {\n    swal(\"Thanks!\", \"You have subscribed our newsletter!\", \"success\");\n  }).catch(err => {\n    swal(\"Oops!\", \"Please type correct email address!\", \"error\");\n  });\n};\nexport const getTours = () => axios.get(`${configuration.api.backend_api}/api/v1/tours`);\nexport const getTour = slug => axios.get(`${configuration.api.backend_api}/api/v1/tours/${slug}`);\nexport const getSearchedTours = (city, state, dateConvert, price) => axios.get(`${configuration.api.backend_api}/api/v1/tours?$city=${city}&state=${state}&startDate=${dateConvert}&price=${price}`);\nexport const bookTour = async (userId, tourId) => {\n  // get checkout session from API\n  const session = await axios({\n    method: \"GET\",\n    url: `${configuration.api.backend_api}/api/v1/bookings/checkout-session/${userId}/${tourId}`,\n    withCredentials: true\n  }); // create checkout from charge credit card\n\n  const stripe = await stripePromise;\n  setTimeout(async () => {\n    await stripe.redirectToCheckout({\n      sessionId: session.data.session.id\n    });\n  }, 1000);\n};\nexport const sendEmail = email => {\n  axios({\n    method: \"POST\",\n    url: `${configuration.api.backend_api}/api/v1/auth/forgotPassword`,\n    data: {\n      email: email\n    },\n    withCredentials: true\n  }).catch(err => {\n    swal(\"Invalid Email\", \"Please enter a valid email address\", \"error\");\n  });\n};\nexport const resetPassword = (token, password) => {\n  axios({\n    method: \"PATCH\",\n    url: `${configuration.api.backend_api}/api/v1/auth/resetPassword/${token}`,\n    data: {\n      password: password\n    },\n    withCredentials: true\n  }).then(res => {\n    swal(\"Updated\", \"Successfully reset your password\", \"success\");\n  }).catch(res => {\n    swal(\"Oops\", \"You entered invalid token\", \"error\");\n  });\n};\nexport const getBookings = userEmail => axios.get(`${configuration.api.backend_api}/api/v1/bookings/getMyBookings/${userEmail}`);\nexport const getReviews = userEmail => axios.get(`${configuration.api.backend_api}/api/v1/reviews/getMyReviews/${userEmail}`);","map":{"version":3,"sources":["/Users/sophiesun/Desktop/BestTraveller/frontend-Traveller/src/api/api.js"],"names":["swal","axios","loadStripe","configuration","stripePromise","validateEmail","email","re","test","String","toLowerCase","register","inputData","method","url","api","backend_api","data","firstName","value","lastName","password","role","dateOfBirth","subscribe","e","preventDefault","withCredentials","then","res","catch","err","getTours","get","getTour","slug","getSearchedTours","city","state","dateConvert","price","bookTour","userId","tourId","session","stripe","setTimeout","redirectToCheckout","sessionId","id","sendEmail","resetPassword","token","getBookings","userEmail","getReviews"],"mappings":"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","sourcesContent":["import swal from \"sweetalert\"\nimport axios from \"axios\"\nimport { loadStripe } from \"@stripe/stripe-js\"\nimport configuration from \"../config/config\"\n\nconst stripePromise = loadStripe(\n  \"pk_test_51JH5JMKu7kyZrQEG6Lo8u0p4bMPRIYLR2nwyj3JmeUFMKUjZU0Hax085w4Z4VfX0uFfKI4UQthFV2NPDr842JTrL00XBO0dRBQ\"\n)\n\nconst validateEmail = (email) => {\n  const re =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  return re.test(String(email).toLowerCase())\n}\n\nexport const register = (inputData) =>\n  axios({\n    method: \"POST\",\n    url: `${configuration.api.backend_api}/api/v1/users`,\n    data: {\n      firstName: inputData.firstName.value,\n      lastName: inputData.lastName.value,\n      email: inputData.email.value,\n      password: inputData.password.value,\n      role: \"user\",\n      dateOfBirth: \"29/09/1999\",\n    },\n  })\n\nexport const subscribe = (e, email) => {\n  e.preventDefault()\n  if (!validateEmail(email)) {\n    swal(\"Oops\", \"Please enter valid email address\", \"error\")\n    return\n  }\n  axios({\n    method: \"POST\",\n    url: `${configuration.api.backend_api}/api/v1/auth/subscribe`,\n    data: {\n      email,\n    },\n    withCredentials: true,\n  })\n    .then((res) => {\n      swal(\"Thanks!\", \"You have subscribed our newsletter!\", \"success\")\n    })\n    .catch((err) => {\n      swal(\"Oops!\", \"Please type correct email address!\", \"error\")\n    })\n}\n\nexport const getTours = () =>\n  axios.get(`${configuration.api.backend_api}/api/v1/tours`)\n\nexport const getTour = (slug) =>\n  axios.get(`${configuration.api.backend_api}/api/v1/tours/${slug}`)\n\nexport const getSearchedTours = (city, state, dateConvert, price) =>\n  axios.get(\n    `${configuration.api.backend_api}/api/v1/tours?$city=${city}&state=${state}&startDate=${dateConvert}&price=${price}`\n  )\n\nexport const bookTour = async (userId, tourId) => {\n  // get checkout session from API\n  const session = await axios({\n    method: \"GET\",\n    url: `${configuration.api.backend_api}/api/v1/bookings/checkout-session/${userId}/${tourId}`,\n    withCredentials: true,\n  })\n  // create checkout from charge credit card\n  const stripe = await stripePromise\n  setTimeout(async () => {\n    await stripe.redirectToCheckout({\n      sessionId: session.data.session.id,\n    })\n  }, 1000)\n}\n\nexport const sendEmail = (email) => {\n  axios({\n    method: \"POST\",\n    url: `${configuration.api.backend_api}/api/v1/auth/forgotPassword`,\n    data: {\n      email: email,\n    },\n    withCredentials: true,\n  }).catch((err) => {\n    swal(\"Invalid Email\", \"Please enter a valid email address\", \"error\")\n  })\n}\n\nexport const resetPassword = (token, password) => {\n  axios({\n    method: \"PATCH\",\n    url: `${configuration.api.backend_api}/api/v1/auth/resetPassword/${token}`,\n    data: {\n      password: password,\n    },\n    withCredentials: true,\n  })\n    .then((res) => {\n      swal(\"Updated\", \"Successfully reset your password\", \"success\")\n    })\n    .catch((res) => {\n      swal(\"Oops\", \"You entered invalid token\", \"error\")\n    })\n}\n\nexport const getBookings = (userEmail) =>\n  axios.get(\n    `${configuration.api.backend_api}/api/v1/bookings/getMyBookings/${userEmail}`\n  )\n\nexport const getReviews = (userEmail) =>\n  axios.get(\n    `${configuration.api.backend_api}/api/v1/reviews/getMyReviews/${userEmail}`\n  )\n"]},"metadata":{},"sourceType":"module"}