{"ast":null,"code":"var _jsxFileName = \"/Users/sophiesun/Desktop/Bestraveller/front-end-traveler/src/pages/Detail/BookNow/BookNow.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Wrapper, Title, Content, Button } from \"./styles/style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(\"pk_test_51JH5JMKu7kyZrQEG6Lo8u0p4bMPRIYLR2nwyj3JmeUFMKUjZU0Hax085w4Z4VfX0uFfKI4UQthFV2NPDr842JTrL00XBO0dRBQ\");\n\nclass BookNow extends Component {\n  async bookTour(userId, tourId) {\n    // get checkout session from API\n    const session = await axios({\n      method: \"GET\",\n      url: `http://127.0.0.1:3000/api/v1/bookings/checkout-session/${userId}/${tourId}`,\n      withCredentials: true\n    }); // create checkout from charge credit card\n\n    const stripe = await stripePromise;\n    setTimeout(async () => {\n      await stripe.redirectToCheckout({\n        sessionId: session.data.session.id\n      });\n    }, 1000);\n  }\n\n  render() {\n    const {\n      isLoggedIn,\n      userEmail,\n      tour\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"What are you waiting for?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Content, {\n          children: \"What a wonderful trip! Make it yours today!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), isLoggedIn ?\n        /*#__PURE__*/\n        // eslint-disable-next-line react/prop-types\n        _jsxDEV(Button, {\n          onClick: () => this.bookTour(userEmail, tour._id),\n          children: \"Book Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Log in to book tour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nBookNow.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  userEmail: PropTypes.string.isRequired,\n  tour: PropTypes.shape({}).isRequired\n};\n\nconst mapStateToProps = state => ({\n  isLoggedIn: state.header.isLoggedIn,\n  userEmail: state.header.userEmail\n});\n\nexport default connect(mapStateToProps, null)(BookNow);","map":{"version":3,"sources":["/Users/sophiesun/Desktop/Bestraveller/front-end-traveler/src/pages/Detail/BookNow/BookNow.jsx"],"names":["React","Component","PropTypes","axios","connect","loadStripe","Wrapper","Title","Content","Button","stripePromise","BookNow","bookTour","userId","tourId","session","method","url","withCredentials","stripe","setTimeout","redirectToCheckout","sessionId","data","id","render","isLoggedIn","userEmail","tour","props","_id","propTypes","bool","isRequired","string","shape","mapStateToProps","state","header"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,OAAzB,EAAkCC,MAAlC,QAAgD,gBAAhD;;;AAEA,MAAMC,aAAa,GAAGL,UAAU,CAC9B,6GAD8B,CAAhC;;AAGA,MAAMM,OAAN,SAAsBV,SAAtB,CAAgC;AAChB,QAARW,QAAQ,CAACC,MAAD,EAASC,MAAT,EAAiB;AAC7B;AACA,UAAMC,OAAO,GAAG,MAAMZ,KAAK,CAAC;AAC1Ba,MAAAA,MAAM,EAAE,KADkB;AAE1BC,MAAAA,GAAG,EAAG,0DAAyDJ,MAAO,IAAGC,MAAO,EAFtD;AAG1BI,MAAAA,eAAe,EAAE;AAHS,KAAD,CAA3B,CAF6B,CAO7B;;AACA,UAAMC,MAAM,GAAG,MAAMT,aAArB;AACAU,IAAAA,UAAU,CAAC,YAAY;AACrB,YAAMD,MAAM,CAACE,kBAAP,CAA0B;AAC9BC,QAAAA,SAAS,EAAEP,OAAO,CAACQ,IAAR,CAAaR,OAAb,CAAqBS;AADF,OAA1B,CAAN;AAGD,KAJS,EAIP,IAJO,CAAV;AAKD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA,SAAd;AAAyBC,MAAAA;AAAzB,QAAkC,KAAKC,KAA7C;AACA,wBACE;AAAA,6BACE,QAAC,OAAD;AAAA,gCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGH,UAAU;AAAA;AACT;AACA,gBAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKd,QAAL,CAAce,SAAd,EAAyBC,IAAI,CAACE,GAA9B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFS,gBAMT,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAgBD;;AAnC6B;;AAsChCnB,OAAO,CAACoB,SAAR,GAAoB;AAClBL,EAAAA,UAAU,EAAExB,SAAS,CAAC8B,IAAV,CAAeC,UADT;AAElBN,EAAAA,SAAS,EAAEzB,SAAS,CAACgC,MAAV,CAAiBD,UAFV;AAGlBL,EAAAA,IAAI,EAAE1B,SAAS,CAACiC,KAAV,CAAgB,EAAhB,EAAoBF;AAHR,CAApB;;AAMA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,UAAU,EAAEW,KAAK,CAACC,MAAN,CAAaZ,UADS;AAElCC,EAAAA,SAAS,EAAEU,KAAK,CAACC,MAAN,CAAaX;AAFU,CAAZ,CAAxB;;AAKA,eAAevB,OAAO,CAACgC,eAAD,EAAkB,IAAlB,CAAP,CAA+BzB,OAA/B,CAAf","sourcesContent":["import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport axios from \"axios\"\nimport { connect } from \"react-redux\"\nimport { loadStripe } from \"@stripe/stripe-js\"\nimport { Wrapper, Title, Content, Button } from \"./styles/style\"\n\nconst stripePromise = loadStripe(\n  \"pk_test_51JH5JMKu7kyZrQEG6Lo8u0p4bMPRIYLR2nwyj3JmeUFMKUjZU0Hax085w4Z4VfX0uFfKI4UQthFV2NPDr842JTrL00XBO0dRBQ\"\n)\nclass BookNow extends Component {\n  async bookTour(userId, tourId) {\n    // get checkout session from API\n    const session = await axios({\n      method: \"GET\",\n      url: `http://127.0.0.1:3000/api/v1/bookings/checkout-session/${userId}/${tourId}`,\n      withCredentials: true,\n    })\n    // create checkout from charge credit card\n    const stripe = await stripePromise\n    setTimeout(async () => {\n      await stripe.redirectToCheckout({\n        sessionId: session.data.session.id,\n      })\n    }, 1000)\n  }\n\n  render() {\n    const { isLoggedIn, userEmail, tour } = this.props\n    return (\n      <>\n        <Wrapper>\n          <Title>What are you waiting for?</Title>\n          <Content>What a wonderful trip! Make it yours today!</Content>\n          {isLoggedIn ? (\n            // eslint-disable-next-line react/prop-types\n            <Button onClick={() => this.bookTour(userEmail, tour._id)}>\n              Book Now\n            </Button>\n          ) : (\n            <Button>Log in to book tour</Button>\n          )}\n        </Wrapper>\n      </>\n    )\n  }\n}\n\nBookNow.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  userEmail: PropTypes.string.isRequired,\n  tour: PropTypes.shape({}).isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  isLoggedIn: state.header.isLoggedIn,\n  userEmail: state.header.userEmail,\n})\n\nexport default connect(mapStateToProps, null)(BookNow)\n"]},"metadata":{},"sourceType":"module"}