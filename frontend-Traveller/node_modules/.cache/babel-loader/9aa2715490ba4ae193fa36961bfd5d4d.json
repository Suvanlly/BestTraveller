{"ast":null,"code":"import axios from \"axios\";\nimport swal from \"sweetalert\";\nimport configuration from \"../../../config/config\";\nimport * as actionTypes from \"./actionTypes\";\n\nconst getTourInfo = tour => ({\n  type: actionTypes.GET_TOUR_INFO,\n  tour\n});\n\nexport const getTour = slug => dispatch => {\n  axios.get(`${configuration.api.backend_api}/api/v1/tours/${slug}`).then(response => {\n    const tour = response.data;\n    const action = getTourInfo(tour);\n    dispatch(action);\n  });\n};\nexport const sendComment = (userEmail, userImage, userFirstName, content, tour) => () => {\n  if (content === \"\") {\n    swal(\"Oops\", \"Comment cannot be empty\", \"error\");\n    return;\n  }\n\n  axios({\n    method: \"POST\",\n    url: `${configuration.api.backend_api}/api/v1/reviews/`,\n    data: {\n      comment: content,\n      user: userEmail,\n      userImage: userImage,\n      userFirstName: userFirstName,\n      tour: tour._id,\n      tourTitle: tour.title,\n      tourImage: tour.image\n    },\n    withCredentials: true\n  }).then(res => {\n    const reviewId = res.data._id;\n    axios({\n      method: \"POST\",\n      url: `${configuration.api.backend_api}/api/v1/tours/${tour._id}/reviews/${reviewId}`,\n      withCredentials: true\n    }).then(() => {\n      swal(\"Thanks!\", \"You have successfully commented!\", \"success\");\n    });\n  }).catch(err => {\n    swal(\"Oops\", \"Something went wrong\", \"error\");\n  });\n};","map":{"version":3,"sources":["/Users/sophiesun/Desktop/BestTraveller/frontend-Traveller/src/pages/Detail/store/actionCreators.js"],"names":["axios","swal","configuration","actionTypes","getTourInfo","tour","type","GET_TOUR_INFO","getTour","slug","dispatch","get","api","backend_api","then","response","data","action","sendComment","userEmail","userImage","userFirstName","content","method","url","comment","user","_id","tourTitle","title","tourImage","image","withCredentials","res","reviewId","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;;AAEA,MAAMC,WAAW,GAAIC,IAAD,KAAW;AAC7BC,EAAAA,IAAI,EAAEH,WAAW,CAACI,aADW;AAE7BF,EAAAA;AAF6B,CAAX,CAApB;;AAKA,OAAO,MAAMG,OAAO,GAAIC,IAAD,IAAWC,QAAD,IAAc;AAC7CV,EAAAA,KAAK,CACFW,GADH,CACQ,GAAET,aAAa,CAACU,GAAd,CAAkBC,WAAY,iBAAgBJ,IAAK,EAD7D,EAEGK,IAFH,CAESC,QAAD,IAAc;AAClB,UAAMV,IAAI,GAAGU,QAAQ,CAACC,IAAtB;AACA,UAAMC,MAAM,GAAGb,WAAW,CAACC,IAAD,CAA1B;AACAK,IAAAA,QAAQ,CAACO,MAAD,CAAR;AACD,GANH;AAOD,CARM;AAUP,OAAO,MAAMC,WAAW,GACtB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,aAAvB,EAAsCC,OAAtC,EAA+CjB,IAA/C,KAAwD,MAAM;AAC5D,MAAIiB,OAAO,KAAK,EAAhB,EAAoB;AAClBrB,IAAAA,IAAI,CAAC,MAAD,EAAS,yBAAT,EAAoC,OAApC,CAAJ;AACA;AACD;;AACDD,EAAAA,KAAK,CAAC;AACJuB,IAAAA,MAAM,EAAE,MADJ;AAEJC,IAAAA,GAAG,EAAG,GAAEtB,aAAa,CAACU,GAAd,CAAkBC,WAAY,kBAFlC;AAGJG,IAAAA,IAAI,EAAE;AACJS,MAAAA,OAAO,EAAEH,OADL;AAEJI,MAAAA,IAAI,EAAEP,SAFF;AAGJC,MAAAA,SAAS,EAAEA,SAHP;AAIJC,MAAAA,aAAa,EAAEA,aAJX;AAKJhB,MAAAA,IAAI,EAAEA,IAAI,CAACsB,GALP;AAMJC,MAAAA,SAAS,EAAEvB,IAAI,CAACwB,KANZ;AAOJC,MAAAA,SAAS,EAAEzB,IAAI,CAAC0B;AAPZ,KAHF;AAYJC,IAAAA,eAAe,EAAE;AAZb,GAAD,CAAL,CAcGlB,IAdH,CAcSmB,GAAD,IAAS;AACb,UAAMC,QAAQ,GAAGD,GAAG,CAACjB,IAAJ,CAASW,GAA1B;AACA3B,IAAAA,KAAK,CAAC;AACJuB,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,GAAG,EAAG,GAAEtB,aAAa,CAACU,GAAd,CAAkBC,WAAY,iBAAgBR,IAAI,CAACsB,GAAI,YAAWO,QAAS,EAF/E;AAGJF,MAAAA,eAAe,EAAE;AAHb,KAAD,CAAL,CAIGlB,IAJH,CAIQ,MAAM;AACZb,MAAAA,IAAI,CAAC,SAAD,EAAY,kCAAZ,EAAgD,SAAhD,CAAJ;AACD,KAND;AAOD,GAvBH,EAwBGkC,KAxBH,CAwBUC,GAAD,IAAS;AACdnC,IAAAA,IAAI,CAAC,MAAD,EAAS,sBAAT,EAAiC,OAAjC,CAAJ;AACD,GA1BH;AA2BD,CAjCI","sourcesContent":["import axios from \"axios\"\nimport swal from \"sweetalert\"\nimport configuration from \"../../../config/config\"\nimport * as actionTypes from \"./actionTypes\"\n\nconst getTourInfo = (tour) => ({\n  type: actionTypes.GET_TOUR_INFO,\n  tour,\n})\n\nexport const getTour = (slug) => (dispatch) => {\n  axios\n    .get(`${configuration.api.backend_api}/api/v1/tours/${slug}`)\n    .then((response) => {\n      const tour = response.data\n      const action = getTourInfo(tour)\n      dispatch(action)\n    })\n}\n\nexport const sendComment =\n  (userEmail, userImage, userFirstName, content, tour) => () => {\n    if (content === \"\") {\n      swal(\"Oops\", \"Comment cannot be empty\", \"error\")\n      return\n    }\n    axios({\n      method: \"POST\",\n      url: `${configuration.api.backend_api}/api/v1/reviews/`,\n      data: {\n        comment: content,\n        user: userEmail,\n        userImage: userImage,\n        userFirstName: userFirstName,\n        tour: tour._id,\n        tourTitle: tour.title,\n        tourImage: tour.image,\n      },\n      withCredentials: true,\n    })\n      .then((res) => {\n        const reviewId = res.data._id\n        axios({\n          method: \"POST\",\n          url: `${configuration.api.backend_api}/api/v1/tours/${tour._id}/reviews/${reviewId}`,\n          withCredentials: true,\n        }).then(() => {\n          swal(\"Thanks!\", \"You have successfully commented!\", \"success\")\n        })\n      })\n      .catch((err) => {\n        swal(\"Oops\", \"Something went wrong\", \"error\")\n      })\n  }\n"]},"metadata":{},"sourceType":"module"}